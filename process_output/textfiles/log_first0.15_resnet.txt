Traceback (most recent call last):
  File "main_6epsilons.py", line 1154, in <module>
    main()
  File "main_6epsilons.py", line 1115, in main
    num_left, new_iter = train(args, model, device, train_loader, optimizer, epoch, criterion, oracle, test_loader_constr, test_loader_adv, print_iter, starttime, pruning_settings, train_writer=train_writer, pruning_engine=pruning_engine)
  File "main_6epsilons.py", line 101, in train
    output = model(data)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/kduncan/Pruning/models/resnet.py", line 193, in forward
    x = self.layer1(x)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/kduncan/Pruning/models/resnet.py", line 111, in forward
    residual = self.downsample(x)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py", line 81, in forward
    exponential_average_factor, self.eps)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 1656, in batch_norm
    training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: CUDA out of memory. Tried to allocate 16.00 MiB (GPU 0; 4.63 GiB total capacity; 357.24 MiB already allocated; 13.19 MiB free; 18.76 MiB cached)
Files already downloaded and verified
Files already downloaded and verified
Ignoring network_output argument, using prob and logprob to obtain KL divergence
skipping parameter layer1.0.gate1.weight shape: torch.Size([64])
skipping parameter layer1.0.gate2.weight shape: torch.Size([64])
skipping parameter layer1.1.gate1.weight shape: torch.Size([64])
skipping parameter layer1.1.gate2.weight shape: torch.Size([64])
skipping parameter layer1.2.gate1.weight shape: torch.Size([64])
skipping parameter layer1.2.gate2.weight shape: torch.Size([64])
skipping parameter layer2.0.gate1.weight shape: torch.Size([128])
skipping parameter layer2.0.gate2.weight shape: torch.Size([128])
skipping parameter layer2.1.gate1.weight shape: torch.Size([128])
skipping parameter layer2.1.gate2.weight shape: torch.Size([128])
skipping parameter layer2.2.gate1.weight shape: torch.Size([128])
skipping parameter layer2.2.gate2.weight shape: torch.Size([128])
skipping parameter layer2.3.gate1.weight shape: torch.Size([128])
skipping parameter layer2.3.gate2.weight shape: torch.Size([128])
skipping parameter layer3.0.gate1.weight shape: torch.Size([256])
skipping parameter layer3.0.gate2.weight shape: torch.Size([256])
skipping parameter layer3.1.gate1.weight shape: torch.Size([256])
skipping parameter layer3.1.gate2.weight shape: torch.Size([256])
skipping parameter layer3.2.gate1.weight shape: torch.Size([256])
skipping parameter layer3.2.gate2.weight shape: torch.Size([256])
skipping parameter layer3.3.gate1.weight shape: torch.Size([256])
skipping parameter layer3.3.gate2.weight shape: torch.Size([256])
skipping parameter layer3.4.gate1.weight shape: torch.Size([256])
skipping parameter layer3.4.gate2.weight shape: torch.Size([256])
skipping parameter layer3.5.gate1.weight shape: torch.Size([256])
skipping parameter layer3.5.gate2.weight shape: torch.Size([256])
skipping parameter layer4.0.gate1.weight shape: torch.Size([512])
skipping parameter layer4.0.gate2.weight shape: torch.Size([512])
skipping parameter layer4.1.gate1.weight shape: torch.Size([512])
skipping parameter layer4.1.gate2.weight shape: torch.Size([512])
skipping parameter layer4.2.gate1.weight shape: torch.Size([512])
skipping parameter layer4.2.gate2.weight shape: torch.Size([512])
CIFAR100_resnet50_100_100_0.1_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM
main_6epsilons.py --dataset=CIFAR100 --model=resnet50 --pruning=True --tensorboard=True --log-interval=100 --pruning_config=./configs/CIFAR100_100_100.json --constraint=RobustnessDandR(eps1=7.8, eps2=2.9) --print-after-epoch=0 --dl2-weight=0.1 --delay=0 --epochs=100 --adv-after-epoch=0 --batch-size=16 --load_model=./CIFAR100/models/cifar100_resnet50_best.weights --name=CIFAR100_resnet50
pruning_engine.load_mask(): did not find mask file, will load nothing
=> loading checkpoint './CIFAR100/models/cifar100_resnet50_best.weights'
conv1.weight torch.Size([64, 3, 3, 3])
bn1.weight torch.Size([64])
bn1.bias torch.Size([64])
bn1.running_mean torch.Size([64])
bn1.running_var torch.Size([64])
bn1.num_batches_tracked torch.Size([])
layer1.0.conv1.weight torch.Size([64, 64, 1, 1])
layer1.0.bn1.weight torch.Size([64])
layer1.0.bn1.bias torch.Size([64])
layer1.0.bn1.running_mean torch.Size([64])
layer1.0.bn1.running_var torch.Size([64])
*********
conv1.weight torch.Size([64, 3, 3, 3])
bn1.weight torch.Size([64])
bn1.bias torch.Size([64])
bn1.running_mean torch.Size([64])
bn1.running_var torch.Size([64])
bn1.num_batches_tracked torch.Size([])
layer1.0.conv1.weight torch.Size([64, 64, 1, 1])
layer1.0.bn1.weight torch.Size([64])
layer1.0.bn1.bias torch.Size([64])
layer1.0.bn1.running_mean torch.Size([64])
layer1.0.bn1.running_var torch.Size([64])
=> loaded checkpoint './CIFAR100/models/cifar100_resnet50_best.weights' (epoch -1)
epoch, neuron_units, loss, dl2_loss, top1, top5, dl2_p_acc, dl2_constraint_acc
Traceback (most recent call last):
  File "remove_header.py", line 3, in <module>
    lines = open(sys.argv[1], 'r').readlines()
FileNotFoundError: [Errno 2] No such file or directory: '../cuda/log_CIFAR100_resnet50_100_100_0.1_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM.txt'
