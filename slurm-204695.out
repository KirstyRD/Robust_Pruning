Traceback (most recent call last):
  File "main_allepsilons.py", line 1154, in <module>
    main()
  File "main_allepsilons.py", line 1091, in main
    load_model_pytorch(model, args.load_model, args.model)
  File "/home/kduncan/Pruning/utils/utils.py", line 134, in load_model_pytorch
    model.load_state_dict(load_from, strict=True)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 845, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for DenseNet:
	Unexpected key(s) in state_dict: "features.gate0): (bottom.weight", "features.gate5): (top.weight", "features.denseblock1.denselayer1.gate1): (input.weight", "features.denseblock1.denselayer1.gate3): (output_conv.weight", "features.denseblock1.denselayer2.gate1): (input.weight", "features.denseblock1.denselayer2.gate3): (output_conv.weight", "features.denseblock1.denselayer3.gate1): (input.weight", "features.denseblock1.denselayer3.gate3): (output_conv.weight", "features.denseblock1.denselayer4.gate1): (input.weight", "features.denseblock1.denselayer4.gate3): (output_conv.weight", "features.denseblock1.denselayer5.gate1): (input.weight", "features.denseblock1.denselayer5.gate3): (output_conv.weight", "features.denseblock1.denselayer6.gate1): (input.weight", "features.denseblock1.denselayer6.gate3): (output_conv.weight", "features.transition1.gate): (input.weight", "features.transition1.gate): (output_conv.weight", "features.denseblock2.denselayer1.gate1): (input.weight", "features.denseblock2.denselayer1.gate3): (output_conv.weight", "features.denseblock2.denselayer2.gate1): (input.weight", "features.denseblock2.denselayer2.gate3): (output_conv.weight", "features.denseblock2.denselayer3.gate1): (input.weight", "features.denseblock2.denselayer3.gate3): (output_conv.weight", "features.denseblock2.denselayer4.gate1): (input.weight", "features.denseblock2.denselayer4.gate3): (output_conv.weight", "features.denseblock2.denselayer5.gate1): (input.weight", "features.denseblock2.denselayer5.gate3): (output_conv.weight", "features.denseblock2.denselayer6.gate1): (input.weight", "features.denseblock2.denselayer6.gate3): (output_conv.weight", "features.denseblock2.denselayer7.gate1): (input.weight", "features.denseblock2.denselayer7.gate3): (output_conv.weight", "features.denseblock2.denselayer8.gate1): (input.weight", "features.denseblock2.denselayer8.gate3): (output_conv.weight", "features.denseblock2.denselayer9.gate1): (input.weight", "features.denseblock2.denselayer9.gate3): (output_conv.weight", "features.denseblock2.denselayer10.gate1): (input.weight", "features.denseblock2.denselayer10.gate3): (output_conv.weight", "features.denseblock2.denselayer11.gate1): (input.weight", "features.denseblock2.denselayer11.gate3): (output_conv.weight", "features.denseblock2.denselayer12.gate1): (input.weight", "features.denseblock2.denselayer12.gate3): (output_conv.weight", "features.transition2.gate): (input.weight", "features.transition2.gate): (output_conv.weight", "features.denseblock3.denselayer1.gate1): (input.weight", "features.denseblock3.denselayer1.gate3): (output_conv.weight", "features.denseblock3.denselayer2.gate1): (input.weight", "features.denseblock3.denselayer2.gate3): (output_conv.weight", "features.denseblock3.denselayer3.gate1): (input.weight", "features.denseblock3.denselayer3.gate3): (output_conv.weight", "features.denseblock3.denselayer4.gate1): (input.weight", "features.denseblock3.denselayer4.gate3): (output_conv.weight", "features.denseblock3.denselayer5.gate1): (input.weight", "features.denseblock3.denselayer5.gate3): (output_conv.weight", "features.denseblock3.denselayer6.gate1): (input.weight", "features.denseblock3.denselayer6.gate3): (output_conv.weight", "features.denseblock3.denselayer7.gate1): (input.weight", "features.denseblock3.denselayer7.gate3): (output_conv.weight", "features.denseblock3.denselayer8.gate1): (input.weight", "features.denseblock3.denselayer8.gate3): (output_conv.weight", "features.denseblock3.denselayer9.gate1): (input.weight", "features.denseblock3.denselayer9.gate3): (output_conv.weight", "features.denseblock3.denselayer10.gate1): (input.weight", "features.denseblock3.denselayer10.gate3): (output_conv.weight", "features.denseblock3.denselayer11.gate1): (input.weight", "features.denseblock3.denselayer11.gate3): (output_conv.weight", "features.denseblock3.denselayer12.gate1): (input.weight", "features.denseblock3.denselayer12.gate3): (output_conv.weight", "features.denseblock3.denselayer13.gate1): (input.weight", "features.denseblock3.denselayer13.gate3): (output_conv.weight", "features.denseblock3.denselayer14.gate1): (input.weight", "features.denseblock3.denselayer14.gate3): (output_conv.weight", "features.denseblock3.denselayer15.gate1): (input.weight", "features.denseblock3.denselayer15.gate3): (output_conv.weight", "features.denseblock3.denselayer16.gate1): (input.weight", "features.denseblock3.denselayer16.gate3): (output_conv.weight", "features.denseblock3.denselayer17.gate1): (input.weight", "features.denseblock3.denselayer17.gate3): (output_conv.weight", "features.denseblock3.denselayer18.gate1): (input.weight", "features.denseblock3.denselayer18.gate3): (output_conv.weight", "features.denseblock3.denselayer19.gate1): (input.weight", "features.denseblock3.denselayer19.gate3): (output_conv.weight", "features.denseblock3.denselayer20.gate1): (input.weight", "features.denseblock3.denselayer20.gate3): (output_conv.weight", "features.denseblock3.denselayer21.gate1): (input.weight", "features.denseblock3.denselayer21.gate3): (output_conv.weight", "features.denseblock3.denselayer22.gate1): (input.weight", "features.denseblock3.denselayer22.gate3): (output_conv.weight", "features.denseblock3.denselayer23.gate1): (input.weight", "features.denseblock3.denselayer23.gate3): (output_conv.weight", "features.denseblock3.denselayer24.gate1): (input.weight", "features.denseblock3.denselayer24.gate3): (output_conv.weight", "features.transition3.gate): (input.weight", "features.transition3.gate): (output_conv.weight", "features.denseblock4.denselayer1.gate1): (input.weight", "features.denseblock4.denselayer1.gate3): (output_conv.weight", "features.denseblock4.denselayer2.gate1): (input.weight", "features.denseblock4.denselayer2.gate3): (output_conv.weight", "features.denseblock4.denselayer3.gate1): (input.weight", "features.denseblock4.denselayer3.gate3): (output_conv.weight", "features.denseblock4.denselayer4.gate1): (input.weight", "features.denseblock4.denselayer4.gate3): (output_conv.weight", "features.denseblock4.denselayer5.gate1): (input.weight", "features.denseblock4.denselayer5.gate3): (output_conv.weight", "features.denseblock4.denselayer6.gate1): (input.weight", "features.denseblock4.denselayer6.gate3): (output_conv.weight", "features.denseblock4.denselayer7.gate1): (input.weight", "features.denseblock4.denselayer7.gate3): (output_conv.weight", "features.denseblock4.denselayer8.gate1): (input.weight", "features.denseblock4.denselayer8.gate3): (output_conv.weight", "features.denseblock4.denselayer9.gate1): (input.weight", "features.denseblock4.denselayer9.gate3): (output_conv.weight", "features.denseblock4.denselayer10.gate1): (input.weight", "features.denseblock4.denselayer10.gate3): (output_conv.weight", "features.denseblock4.denselayer11.gate1): (input.weight", "features.denseblock4.denselayer11.gate3): (output_conv.weight", "features.denseblock4.denselayer12.gate1): (input.weight", "features.denseblock4.denselayer12.gate3): (output_conv.weight", "features.denseblock4.denselayer13.gate1): (input.weight", "features.denseblock4.denselayer13.gate3): (output_conv.weight", "features.denseblock4.denselayer14.gate1): (input.weight", "features.denseblock4.denselayer14.gate3): (output_conv.weight", "features.denseblock4.denselayer15.gate1): (input.weight", "features.denseblock4.denselayer15.gate3): (output_conv.weight", "features.denseblock4.denselayer16.gate1): (input.weight", "features.denseblock4.denselayer16.gate3): (output_conv.weight". 
Files already downloaded and verified
Files already downloaded and verified
Ignoring network_output argument, using prob and logprob to obtain KL divergence
CIFAR100_densenet121_10_10_0.01_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM
main_allepsilons.py --dataset=CIFAR100 --model=densenet121 --pruning=True --tensorboard=True --log-interval=10 --pruning_config=./configs/CIFAR100_10_10.json --constraint=RobustnessDandR(eps1=7.8, eps2=2.9) --print-after-epoch=0 --dl2-weight=0.01 --delay=0 --epochs=1000 --adv-after-epoch=10 --batch-size=64 --load_model=./CIFAR100_densenet/best_fornow.weights --name=CIFAR100_densenet121_16
pruning_engine.load_mask(): did not find mask file, will load nothing
=> loading checkpoint './CIFAR100_densenet/best_fornow.weights'
features.conv0.weight torch.Size([64, 3, 3, 3])
features.denseblock1.denselayer1.norm1.weight torch.Size([64])
features.denseblock1.denselayer1.norm1.bias torch.Size([64])
features.denseblock1.denselayer1.norm1.running_mean torch.Size([64])
features.denseblock1.denselayer1.norm1.running_var torch.Size([64])
features.denseblock1.denselayer1.norm1.num_batches_tracked torch.Size([])
features.denseblock1.denselayer1.conv1.weight torch.Size([128, 64, 1, 1])
features.denseblock1.denselayer1.norm2.weight torch.Size([128])
features.denseblock1.denselayer1.norm2.bias torch.Size([128])
features.denseblock1.denselayer1.norm2.running_mean torch.Size([128])
features.denseblock1.denselayer1.norm2.running_var torch.Size([128])
*********
features.conv0.weight torch.Size([64, 3, 3, 3])
features.gate0): (bottom.weight torch.Size([64])
features.denseblock1.denselayer1.norm1.weight torch.Size([64])
features.denseblock1.denselayer1.norm1.bias torch.Size([64])
features.denseblock1.denselayer1.norm1.running_mean torch.Size([64])
features.denseblock1.denselayer1.norm1.running_var torch.Size([64])
features.denseblock1.denselayer1.norm1.num_batches_tracked torch.Size([])
features.denseblock1.denselayer1.gate1): (input.weight torch.Size([64])
features.denseblock1.denselayer1.conv1.weight torch.Size([128, 64, 1, 1])
features.denseblock1.denselayer1.norm2.weight torch.Size([128])
features.denseblock1.denselayer1.norm2.bias torch.Size([128])
Traceback (most recent call last):
  File "main_allepsilons.py", line 1154, in <module>
    main()
  File "main_allepsilons.py", line 1091, in main
    load_model_pytorch(model, args.load_model, args.model)
  File "/home/kduncan/Pruning/utils/utils.py", line 134, in load_model_pytorch
    model.load_state_dict(load_from, strict=True)
  File "/home/kduncan/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 845, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for DenseNet:
	Unexpected key(s) in state_dict: "features.gate0): (bottom.weight", "features.gate5): (top.weight", "features.denseblock1.denselayer1.gate1): (input.weight", "features.denseblock1.denselayer1.gate3): (output_conv.weight", "features.denseblock1.denselayer2.gate1): (input.weight", "features.denseblock1.denselayer2.gate3): (output_conv.weight", "features.denseblock1.denselayer3.gate1): (input.weight", "features.denseblock1.denselayer3.gate3): (output_conv.weight", "features.denseblock1.denselayer4.gate1): (input.weight", "features.denseblock1.denselayer4.gate3): (output_conv.weight", "features.denseblock1.denselayer5.gate1): (input.weight", "features.denseblock1.denselayer5.gate3): (output_conv.weight", "features.denseblock1.denselayer6.gate1): (input.weight", "features.denseblock1.denselayer6.gate3): (output_conv.weight", "features.transition1.gate): (input.weight", "features.transition1.gate): (output_conv.weight", "features.denseblock2.denselayer1.gate1): (input.weight", "features.denseblock2.denselayer1.gate3): (output_conv.weight", "features.denseblock2.denselayer2.gate1): (input.weight", "features.denseblock2.denselayer2.gate3): (output_conv.weight", "features.denseblock2.denselayer3.gate1): (input.weight", "features.denseblock2.denselayer3.gate3): (output_conv.weight", "features.denseblock2.denselayer4.gate1): (input.weight", "features.denseblock2.denselayer4.gate3): (output_conv.weight", "features.denseblock2.denselayer5.gate1): (input.weight", "features.denseblock2.denselayer5.gate3): (output_conv.weight", "features.denseblock2.denselayer6.gate1): (input.weight", "features.denseblock2.denselayer6.gate3): (output_conv.weight", "features.denseblock2.denselayer7.gate1): (input.weight", "features.denseblock2.denselayer7.gate3): (output_conv.weight", "features.denseblock2.denselayer8.gate1): (input.weight", "features.denseblock2.denselayer8.gate3): (output_conv.weight", "features.denseblock2.denselayer9.gate1): (input.weight", "features.denseblock2.denselayer9.gate3): (output_conv.weight", "features.denseblock2.denselayer10.gate1): (input.weight", "features.denseblock2.denselayer10.gate3): (output_conv.weight", "features.denseblock2.denselayer11.gate1): (input.weight", "features.denseblock2.denselayer11.gate3): (output_conv.weight", "features.denseblock2.denselayer12.gate1): (input.weight", "features.denseblock2.denselayer12.gate3): (output_conv.weight", "features.transition2.gate): (input.weight", "features.transition2.gate): (output_conv.weight", "features.denseblock3.denselayer1.gate1): (input.weight", "features.denseblock3.denselayer1.gate3): (output_conv.weight", "features.denseblock3.denselayer2.gate1): (input.weight", "features.denseblock3.denselayer2.gate3): (output_conv.weight", "features.denseblock3.denselayer3.gate1): (input.weight", "features.denseblock3.denselayer3.gate3): (output_conv.weight", "features.denseblock3.denselayer4.gate1): (input.weight", "features.denseblock3.denselayer4.gate3): (output_conv.weight", "features.denseblock3.denselayer5.gate1): (input.weight", "features.denseblock3.denselayer5.gate3): (output_conv.weight", "features.denseblock3.denselayer6.gate1): (input.weight", "features.denseblock3.denselayer6.gate3): (output_conv.weight", "features.denseblock3.denselayer7.gate1): (input.weight", "features.denseblock3.denselayer7.gate3): (output_conv.weight", "features.denseblock3.denselayer8.gate1): (input.weight", "features.denseblock3.denselayer8.gate3): (output_conv.weight", "features.denseblock3.denselayer9.gate1): (input.weight", "features.denseblock3.denselayer9.gate3): (output_conv.weight", "features.denseblock3.denselayer10.gate1): (input.weight", "features.denseblock3.denselayer10.gate3): (output_conv.weight", "features.denseblock3.denselayer11.gate1): (input.weight", "features.denseblock3.denselayer11.gate3): (output_conv.weight", "features.denseblock3.denselayer12.gate1): (input.weight", "features.denseblock3.denselayer12.gate3): (output_conv.weight", "features.denseblock3.denselayer13.gate1): (input.weight", "features.denseblock3.denselayer13.gate3): (output_conv.weight", "features.denseblock3.denselayer14.gate1): (input.weight", "features.denseblock3.denselayer14.gate3): (output_conv.weight", "features.denseblock3.denselayer15.gate1): (input.weight", "features.denseblock3.denselayer15.gate3): (output_conv.weight", "features.denseblock3.denselayer16.gate1): (input.weight", "features.denseblock3.denselayer16.gate3): (output_conv.weight", "features.denseblock3.denselayer17.gate1): (input.weight", "features.denseblock3.denselayer17.gate3): (output_conv.weight", "features.denseblock3.denselayer18.gate1): (input.weight", "features.denseblock3.denselayer18.gate3): (output_conv.weight", "features.denseblock3.denselayer19.gate1): (input.weight", "features.denseblock3.denselayer19.gate3): (output_conv.weight", "features.denseblock3.denselayer20.gate1): (input.weight", "features.denseblock3.denselayer20.gate3): (output_conv.weight", "features.denseblock3.denselayer21.gate1): (input.weight", "features.denseblock3.denselayer21.gate3): (output_conv.weight", "features.denseblock3.denselayer22.gate1): (input.weight", "features.denseblock3.denselayer22.gate3): (output_conv.weight", "features.denseblock3.denselayer23.gate1): (input.weight", "features.denseblock3.denselayer23.gate3): (output_conv.weight", "features.denseblock3.denselayer24.gate1): (input.weight", "features.denseblock3.denselayer24.gate3): (output_conv.weight", "features.transition3.gate): (input.weight", "features.transition3.gate): (output_conv.weight", "features.denseblock4.denselayer1.gate1): (input.weight", "features.denseblock4.denselayer1.gate3): (output_conv.weight", "features.denseblock4.denselayer2.gate1): (input.weight", "features.denseblock4.denselayer2.gate3): (output_conv.weight", "features.denseblock4.denselayer3.gate1): (input.weight", "features.denseblock4.denselayer3.gate3): (output_conv.weight", "features.denseblock4.denselayer4.gate1): (input.weight", "features.denseblock4.denselayer4.gate3): (output_conv.weight", "features.denseblock4.denselayer5.gate1): (input.weight", "features.denseblock4.denselayer5.gate3): (output_conv.weight", "features.denseblock4.denselayer6.gate1): (input.weight", "features.denseblock4.denselayer6.gate3): (output_conv.weight", "features.denseblock4.denselayer7.gate1): (input.weight", "features.denseblock4.denselayer7.gate3): (output_conv.weight", "features.denseblock4.denselayer8.gate1): (input.weight", "features.denseblock4.denselayer8.gate3): (output_conv.weight", "features.denseblock4.denselayer9.gate1): (input.weight", "features.denseblock4.denselayer9.gate3): (output_conv.weight", "features.denseblock4.denselayer10.gate1): (input.weight", "features.denseblock4.denselayer10.gate3): (output_conv.weight", "features.denseblock4.denselayer11.gate1): (input.weight", "features.denseblock4.denselayer11.gate3): (output_conv.weight", "features.denseblock4.denselayer12.gate1): (input.weight", "features.denseblock4.denselayer12.gate3): (output_conv.weight", "features.denseblock4.denselayer13.gate1): (input.weight", "features.denseblock4.denselayer13.gate3): (output_conv.weight", "features.denseblock4.denselayer14.gate1): (input.weight", "features.denseblock4.denselayer14.gate3): (output_conv.weight", "features.denseblock4.denselayer15.gate1): (input.weight", "features.denseblock4.denselayer15.gate3): (output_conv.weight", "features.denseblock4.denselayer16.gate1): (input.weight", "features.denseblock4.denselayer16.gate3): (output_conv.weight". 
Files already downloaded and verified
Files already downloaded and verified
Ignoring network_output argument, using prob and logprob to obtain KL divergence
CIFAR100_densenet121_10_10_0.2_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM
main_allepsilons.py --dataset=CIFAR100 --model=densenet121 --pruning=True --tensorboard=True --log-interval=10 --pruning_config=./configs/CIFAR100_10_10.json --constraint=RobustnessDandR(eps1=7.8, eps2=2.9) --print-after-epoch=0 --dl2-weight=0.2 --delay=0 --epochs=1000 --adv-after-epoch=0 --batch-size=64 --load_model=./CIFAR100_densenet/best_fornow.weights --name=CIFAR100_densenet121_16#
pruning_engine.load_mask(): did not find mask file, will load nothing
=> loading checkpoint './CIFAR100_densenet/best_fornow.weights'
features.conv0.weight torch.Size([64, 3, 3, 3])
features.denseblock1.denselayer1.norm1.weight torch.Size([64])
features.denseblock1.denselayer1.norm1.bias torch.Size([64])
features.denseblock1.denselayer1.norm1.running_mean torch.Size([64])
features.denseblock1.denselayer1.norm1.running_var torch.Size([64])
features.denseblock1.denselayer1.norm1.num_batches_tracked torch.Size([])
features.denseblock1.denselayer1.conv1.weight torch.Size([128, 64, 1, 1])
features.denseblock1.denselayer1.norm2.weight torch.Size([128])
features.denseblock1.denselayer1.norm2.bias torch.Size([128])
features.denseblock1.denselayer1.norm2.running_mean torch.Size([128])
features.denseblock1.denselayer1.norm2.running_var torch.Size([128])
*********
features.conv0.weight torch.Size([64, 3, 3, 3])
features.gate0): (bottom.weight torch.Size([64])
features.denseblock1.denselayer1.norm1.weight torch.Size([64])
features.denseblock1.denselayer1.norm1.bias torch.Size([64])
features.denseblock1.denselayer1.norm1.running_mean torch.Size([64])
features.denseblock1.denselayer1.norm1.running_var torch.Size([64])
features.denseblock1.denselayer1.norm1.num_batches_tracked torch.Size([])
features.denseblock1.denselayer1.gate1): (input.weight torch.Size([64])
features.denseblock1.denselayer1.conv1.weight torch.Size([128, 64, 1, 1])
features.denseblock1.denselayer1.norm2.weight torch.Size([128])
features.denseblock1.denselayer1.norm2.bias torch.Size([128])
Traceback (most recent call last):
  File "remove_header.py", line 3, in <module>
    lines = open(sys.argv[1], 'r').readlines()
FileNotFoundError: [Errno 2] No such file or directory: '../CIFAR100_resnet50_128/log_CIFAR100_densenet121_10_10_0.01_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM.txt'
/cm/local/apps/slurm/var/spool/job204695/slurm_script: line 25: files/CIFAR100_densenet121_10_10_0.01_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM.txt: No such file or directory
Traceback (most recent call last):
  File "remove_header.py", line 3, in <module>
    lines = open(sys.argv[1], 'r').readlines()
FileNotFoundError: [Errno 2] No such file or directory: '../CIFAR100_resnet50_128/log_CIFAR100_densenet121_10_10_0.2_RobustnessDandR_eps1=7.8,_eps2=2.9__FGSM.txt'
